/*******************************************************************************
        Name:
        Location:
        Description:

            Created: sFall Script Editor
            Updated:
*******************************************************************************/

procedure start;

variable test, test1 := 5;

procedure start begin
   test := test * 10 + 15 + 5 - 2 + test1 / 2;
   test := test * 10 + 15 + 5 - 2 - 30 / 4 - 22;
   test := test * 10 + 15 + 5 - 2 - 30 / 4 * test1 - 22;
   test := test * 10 + 15 + test1 + 5 - 2 - 30 / 4 * test1 / 22 + test;
   test := test * 10 - 15 + 5 + 2 - 30 * 4 / test1 * 22;

                               //T_SYMBOL T_ASSIGN T_START_EXPRESSION T_SYMBOL T_CONSTANT 42 T_CONSTANT 43 T_CONSTANT 43 T_END_EXPRESSION
   test := test * 10 + 15 + 5; //T_SYMBOL T_ASSIGN T_START_EXPRESSION T_SYMBOL T_CONSTANT 42 T_CONSTANT 43 T_CONSTANT 43 T_END_EXPRESSION
   test := test * 10 + 15 + 5 - 2;

   test := test + 10 + 15;   //T_SYMBOL T_ASSIGN T_START_EXPRESSION T_SYMBOL T_CONSTANT (43) T_CONSTANT 43 T_END_EXPRESSION
   test := test + (10 + 15); //T_SYMBOL T_ASSIGN T_START_EXPRESSION T_SYMBOL T_CONSTANT T_CONSTANT 43 | 43 T_END_EXPRESSION

   test := test + 10 + 20 / 2 - 15 * 3;       // -25         T_SYMBOL T_ASSIGN T_START_EXPRESSION T_SYMBOL T_CONSTANT (43) T_CONSTANT T_CONSTANT 47 43 T_CONSTANT T_CONSTANT 42 45 T_END_EXPRESSION
   test := test + (10 + (20 / 2) - (15 * 3)); // -25         T_SYMBOL T_ASSIGN T_START_EXPRESSION T_SYMBOL T_CONSTANT T_CONSTANT T_CONSTANT 47 43 T_CONSTANT T_CONSTANT 42 45 43 T_END_EXPRESSION

   test := test + 10 + 10;              // 20
   test := test + 10 + 20 + 2 - 15 + 3; // 20        T_SYMBOL T_ASSIGN T_START_EXPRESSION T_SYMBOL T_CONSTANT 43 T_CONSTANT 43 T_CONSTANT 43 T_CONSTANT 45 T_CONSTANT 43 T_END_EXPRESSION
// test := 10 + 20 + 2 - 15 + 3;        // 20        T_SYMBOL T_ASSIGN T_START_EXPRESSION T_CONSTANT T_CONSTANT 43 T_CONSTANT 43 T_CONSTANT 45 T_CONSTANT 43 T_CONSTANT T_END_EXPRESSION
                                                                     //T_START_EXPRESSION T_SYMBOL T_CONSTANT T_CONSTANT 43 T_CONSTANT 43 T_CONSTANT 45 T_CONSTANT 43 43 T_END_EXPRESSION
   test := 10 + 15 / 2 + test1 - 5;

   test := test + 10 + (15 / 2) + test1 - 5 * 2;

   test := test * 10 + 15 / 2 + test1 - 5 * 2;


   test := test + 10 * (15 / 2) + test1 - 5 * 2;
   test := 10 * 15 / 2 + (test1 - 5) * 2; // T_SYMBOL T_ASSIGN T_START_EXPRESSION T_CONSTANT T_CONSTANT 42 T_CONSTANT 47 T_SYMBOL T_CONSTANT 45   T_END_EXPRESSION
   test := test + 10 * 15 / 2 + (test1 - 5) * 2;

   test := test / 5 * 10;
   test := test * 5 / 10 * test;
   test := test * 5 / 10 * 10 * 10 + 5;

   test := test * (5 / 10) * 10;
   test := test * 5 / (10 * 10);


   test := test * 5 / test / 10 * 10;
   test := test * 5 / test / 10 * 10 + 10;
   test := test * 5 / test / 10 * 10 * 10;
   test := test * 5 / test / 10 * 15 / 10;


   test := test + 10 + 15/2 + test1 - 5*2;      // 5 + 10 + 15 / 2 + 10 - 10 = 22
                                                // 5 + 10 + (   7) + 10 - 10 = 22
                                                // 5 + (       17) + 10 - 10 = 22

   test := test - 10 + 15/2 + test1 - 5*2;      // 5 - 10 + 15 / 2 + 10 - 10 = 2
                                                // 5 - 10 + (   7) + 10 - 10 = 2
                                                // 5 - (       17) + 10 - 10 = -12 !!!

   test := test + 10 + 15/2 + test1;            // 5 - 10 + 15 / 2 + 10 = 2


   test := test - 3 - 4 + 6 - test1 - -2 + 3;     // 5 - 3 - 4 + 6 - 10 - -2 + 3 = -1
                                                  // 5 - 3 - ( 10) - 10 - -2 + 3 = -13 !!!

   test := test - 3 - 1 + 4+6 - test1 - -2 + 3;   // 5 - 3 - 1 + 4 + 6 - 10 - -2 + 3 = 6
                                                  // 5 - 3 - (     11) - 10 - -2 + 3 = -14 !!!
                                                  // 5 - 3 - 1 + (10)  - 10 - -2 + 3 = 6

   test := test - (3 - 4) + 6;
   test := test - (3 - 4) + 6 - 2;         // 5 - -1 + 6 - 2 = 10
                                           // 5 - -1 + (  4) = 10

   test := test - (3 - 4) + test1 - -2;

   test := test - -1 + 6 - test1 - -2 + 3;  // 5 - -1 + 6 - 10 - -2 + 3 = 7

   test := test - -1 + 6 - test1 + -2 + 3;  // 5 - -1 + 6 - 10 + -2 + 3 = 3
                                            // 5 - -1 + 6 - 10 + (   1) = 3

   test := test - 3 - 1 + 4+6+1 - test1 - -2 + 3;
   test := test - 3 - 1 + 4+6+1 - test1 - -2 + 3 + 5;
   test := test - 3 - 1 + 4+6+1 - test1 - -2 + 3 - 5;
   test := test - (3 - 4) + 4+6+1 - test1 - -2 + 3 - 5 + 1;

   test1 += 5;
end

critical procedure unnamed_proc() begin

end

procedure node999 begin

end