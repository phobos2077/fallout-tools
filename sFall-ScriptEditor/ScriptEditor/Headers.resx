<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAACE
        CQAAAk1TRnQBSQFMAgEBAwEAAQQBAAEEAQABEAEAARABAAT/AREBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEQBgABCDYAAbABKQEsARkBLAEZASwBGQEsARkBLAEZASwBGQEsARkBLAEZASwBGQEs
        ARkBLAEZSAABlgFKASwBGQEsARkBLAEZASwBGQEsARkBLAEZASwBGQEsARkBLAEZASwBGQEsARkIAAGw
        AS0BngFrAX4BawF+AWcBXgFnAV4BYwFeAWMBPgFfAT4BXwE9AV8BPQFbASwBGQgAAZYBSgEsARkBLAEZ
        ASwBGQEsARkBLAEZASwBGQEsARkBLAEZASwBGQEsARkqAAGWAUoBXgFnAV4BYwE+AV8BPQFbAR0BWwEd
        AVcBHQFXAR0BVwEdAVcBHQFXASwBGQgAAdEBMQGfAW8BngFvAX4BawF+AWsBfgFnAV4BZwFeAWMBXgFj
        AT4BXwE9AV8BLAEZCAABlgFKAf8BfwGWAUoBlgFKAZYBSgGWAUoBlgFKAZYBSgGWAUoBlgFKASwBGSoA
        AZYBSgG/AXMBnwFvAZ4BbwGeAWsBfgFrAX4BZwF+AWcBXgFjAT4BXwEdAVcBLAEZCAAB8QExAb8BcwG/
        AXMBngFvAZ4BawF+AWsBfgFnAV4BZwFeAWMBXgFjAT4BXwEsARkIAAGWAUoB/wF/Af8BfwH/AX8B3gF3
        AZ4BcwF9AWsBXAFnATwBXwGWAUoBLAEZKgABlgFKAb8BdwG/AXMBvwFzAb8BcwG/AXMBnwFvAZ4BbwF+
        AWsBXgFnAR0BWwEsARkIAAHyATUB3wF3Ab8BdwHfAXcB3wF3AZ4BbwG/AXMBvwFzAX4BawFeAWcBXgFj
        ASwBGQgAAZYBSgH/AX8B/wF/Af8BfwHeAXcBngFzAX0BawFcAWcBPAFfAZYBSgEsARkqAAGWAUoB3wF3
        Ad8BdwHfAXcBNQEBARwBVwHfAXcBNQEBAfwBUgF+AWsBHQFbASwBGQgAARMBOgHfAXsB3wF3AbsBQgE1
        AQEBvwF3AbsBQgE1AQEBngFvAX4BZwF+AWcBLAEZCAABlgFKAf8BfwH/AX8BEAEAAd8BewG+AXcBnQFv
        AX0BawE8AWMBlgFKASwBGSoAAZYBSgHfAXsB3wF7Ad8BewE1AQEBPQFbAf8BewE1AQEBHAFXAZ4BbwEd
        AVsBLAEZCAABEwE6Af8BewHfAXsBuwFCATUBAQHfAXcBuwFCATUBAQG/AXMBngFrAX4BawEsARkIAAGW
        AUoB/wF/ARABAAEQAQAB/wF/ARABAAG+AXMBfQFvAVwBZwGWAUoBLAEZKgABlwFKAf8BewH/AXsB/wF7
        ATUBAQE9AV8B/wF/ATUBAQE8AVsBvwFzAT0BWwEsARkIAAE0AT4B/wF/Af8BfwG7AUYBNQEBAf8BewG7
        AUYBNQEBAb8BdwGeAW8BngFvASwBGQgAAZcBSgH/AX8B/wF/ARABAAEQAQABEAEAAb4BdwGeAW8BfQFr
        AZYBSgEsARkqAAG3AU4B/wF/Af8BfwH/AX8BNQEBAbsBRgHfAXcBNQEBATwBWwG/AXMBPgFfASwBGQgA
        AVQBQgH/AX8B/wF/AbsBRgE1AQEBHAFXAXYBCQGXAREB3wF3Ab8BcwGfAW8BLAEZCAABtwFOAf8BfwEQ
        AQABEAEAAf8BfwEQAQABEAEAAb4BcwGdAW8BlgFKASwBGSoAAbgBTgH/AX8B/wF/Af8BfwE1AQEBWQEy
        ATUBAQH4ASEB3wF3Ab8BcwE+AV8BLAEZCAABVQFCAf8BfwH/AX8BuwFGATUBAQG7AUYBOQEqAf8BfwHf
        AXsB3wF3Ab8BcwEsARkIAAG4AU4B/wF/Af8BfwEQAQABEAEAARABAAH/AX8B3gF3AZ4BcwGWAUoBLAEZ
        KgAB2QFSAf8BfwH/AX8B/wF/ATUBAQE9AV8B/wF/Ad8BewHfAXcBvwF3AV4BYwEsARkIAAF2AUYB/wF/
        Af8BfwG7AUYBNQEBAf8BfwH/AX8B/wF/Ad8BewHfAXsB3wF3ASwBGQgAAdkBUgH/AX8B/wF/ARABAAH/
        AX8BEAEAARABAAHfAXsBlgFKAZYBSgEsARkqAAHZAVIB/wF/Af8BfwH/AX8BuwFCAZ4BbwH/AX8B3wF7
        Ad8BewF+AWsBXgFnASwBGQgAAZYBSgH/AX8B/wF/Af8BfwH/AX8B/wF/Af8BfwH/AX8B/wF/Af8BewHf
        AXsBLAEZCAAB2QFSAf8BfwH/AX8B/wF/Af8BfwEQAQAB/wF/AZYBSgEsARkBLAEZASwBGSoAAfoBVgH/
        AX8B/wF/Af8BfwH/AX8B/wF/Af8BfwH/AX8BlgFKASwBGQEsARkBLAEZCAABlwFOAf8BfwH/AX8B/wF/
        Af8BfwH/AX8B/wF/Af8BfwH/AX8BLAEZASwBGQEsARkIAAH6AVYB/wF/Af8BfwH/AX8B/wF/Af8BfwH/
        AX8BlwFKARoBXwEsARkBWgElKgAB+gFWAf8BfwH/AX8B/wF/Af8BfwH/AX8B/wF/Af8BfwGXAUoBGgFf
        ASwBGQE0AT4IAAG3AU4B/wF/Af8BfwH/AX8B/wF/Af8BfwH/AX8B/wF/Af8BfwF8AWsBjwElCgABGwFb
        Af8BfwH/AX8B/wF/Af8BfwH/AX8B/wF/AbgBTgEsARkBWgElLAABGwFbAf8BfwH/AX8B/wF/Af8BfwH/
        AX8B/wF/Af8BfwG4AU4BLAEZATQBPgoAAbgBUgH/AX8B/wF/Af8BfwH/AXsB3wF3Ab8BdwG/AXMBngFv
        AfIBNQwAARsBWwEbAVsBGwFbARsBWwEbAVsB+gFWAfkBVgHZAVIBWgElLgABGwFbARsBWwEbAVsBGwFb
        ARsBWwEbAVsB+gFWAfkBVgHZAVIB2QFSaAABQgFNAT4HAAE+AwABKAMAAUADAAEQAwABAQEAAQEFAAGA
        FwAD/wEAAv8BwAEDAv8CAAHAAQMBwAEDAcABBwIAAcABAwHAAQMBwAEHAgABwAEDAcABAwHAAQcCAAHA
        AQMBwAEDAcABBwIAAcABAwHAAQMBwAEHAgABwAEDAcABAwHAAQcCAAHAAQMBwAEDAcABBwIAAcABAwHA
        AQMBwAEHAgABwAEDAcABAwHAAQcCAAHAAQMBwAEDAcABBwIAAcABAwHAAQMBwAEHAgABwAEDAcABAwHA
        AQcCAAHAAQMBwAEHAcABDwIAAcABBwHAAQ8BwAEfAgABwAEPBP8CAAs=
</value>
  </data>
</root>